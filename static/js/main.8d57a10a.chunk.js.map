{"version":3,"sources":["views/header.js","views/totalCard.js","views/tabHeader.js","views/MapsComponents/dictData.js","views/MapsComponents/worldsMap.js","views/MapsComponents/usCovidMap.js","views/dashboard.js","views/VaccineAndNews/news.js","views/ContinentComponents/continents.js","views/home.js","views/countryComponents/countries.js","views/CountyComponents/stateName.js","views/CountyComponents/countyToggleCard.js","views/CountyComponents/localInfo.js","views/StateComponents/CardToggleState.js","views/StateComponents/usStates.js","views/Testing-Sites/testingSiteCardToggle.js","views/Testing-Sites/Testing-sites.js","views/VaccineAndNews/vaccineToggleCard.js","views/VaccineAndNews/vaccine.js","views/about.js","App.js","index.js"],"names":["Header","props","Navbar","bg","variant","className","Brand","href","style","name","Nav","Link","Form","inline","TotalCard","Card","Body","Title","title","Subtitle","posVal","Text","content","ImageCard","width","Img","src","image","continent","DiffCard","name1","cont1","name2","cont2","NewsCard","obj","description","author","url","TabHeader","Dict","require","stateDict","continentDict","ReactFC","fcRoot","FusionCharts","FusionMaps","World","FusionTheme","dataset1","chartConfigs","type","height","dataFormat","dataSource","CovidWorldMap","useState","continentData","setContinentData","useEffect","axios","get","then","res","data","Object","keys","length","map","item","console","log","push","cases","USA","CovidUSMap","stateCases","setStateCase","state","Dashboard","globalCases","deathCases","unitedStatesCases","usDeathCases","globalRecoveryCases","usRecoveryCases","casesStatus","perMillionCases","testCounts","totalCases","usCases","countryData","setCountryData","totalCase","all","spread","catch","err","fetchData","todayCases","deaths","todayDeaths","recovered","todayRecovered","active","critical","deathsPerOneMillion","casesPerOneMillion","tests","testsPerOneMillion","Container","fluid","Row","Col","xs","md","lg","News","vaccineNews","newsData","setNewsData","articles","i","key","NameCard","Continents","covidPositiveCases","covidDeathCases","covidRecoveryCases","perMillionCard","testCard","formvalue","setValue","display","setDisplay","displayAutoSuggest","setDisplayAutoSuggest","onSubmit","e","preventDefault","autoComplete","Group","controlId","Control","onChange","target","value","onClick","placeholder","Button","filter","toLowerCase","indexOf","ele","tabIndex","countries","Countries","apiCountryData","countryFlag","setCountryFlag","displayAutoSearch","setDisplayAutoSearch","countryInfo","flag","country","stateName","USstates","CountyCard","collapsed","duration","render","onToggle","setCollapsibleElement","progress","county","actuals","newCases","fontSize","color","fontWeight","ref","transform","Math","round","metrics","testPositivityRatio","caseDensity","infectionRate","hospitalBeds","capacity","icuBeds","lastUpdatedDate","LocalInfo","apiCountyData","setCountyData","countyData","setCountyInfo","wRef","useRef","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","countyInfo","replaceAll","StateCard","population","USStates","stateData","setStateData","TestingSiteCard","physical_address","state_province","address_1","city","postal_code","phone","opens","closes","TestingSites","setStateName","testingSiteData","setTestingSiteData","post","undefined","Item","oncl","opens_at","closes_at","phone_no","regular_schedule","phones","number","VaccineCard","candidate","mechanism","sponsors","trialPhase","details","Vaccine","covidNews","vaccineData","setVaccineData","About","style1","fontFamily","App","path","exact","component","ReactDOM","getElementById"],"mappings":"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,EAAD,CAAU3G,MAAOwC,EAAc9B,aACvC,6BACA,kBAACqF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKW,GACrB,kBAACb,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKY,GACrB,kBAACd,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKa,IAEzB,6BACA,kBAAChB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAK7B,GACrB,kBAAC2B,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKc,GACrB,kBAAChB,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKe,IAEzB,+BClIZ,IAAIyB,EAAU,CACV,cACA,UACA,UACA,UACA,SACA,sBACA,YACA,UACA,YACA,UACA,kBACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,UACA,SACA,QACA,UACA,yBACA,WACA,SACA,SACA,4BACA,WACA,QACA,UACA,aACJ,WACA,WACA,SACA,iBACA,2BACA,8BACA,OACA,QACA,QACA,WACA,UACA,wBACA,aACA,mCACA,UACA,OACA,SACA,UACA,iBACA,QACA,UACA,WACA,WACA,qBACA,iBACA,UACA,QACA,cACA,UACA,UACA,WACA,WACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,yBACA,SACA,UACA,YACA,SACA,gBACA,SACA,QACA,UACA,sBACA,QACA,WACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,SACA,QACA,UACA,QACA,SACA,aACA,QACA,SACA,WACA,QACA,SACA,SACA,aACA,OACA,SACA,UACA,UACA,qBACA,UACA,QACA,gBACA,YACA,aACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,YACA,uBACA,uBACA,SACA,aACA,UACA,SACA,WACA,aACA,UACA,aACA,UACA,SACA,QACA,QACA,cACA,cACA,YACA,QACA,UACA,6BACA,qBACA,kBACA,SACA,YACA,OACA,oBACA,WACA,QACA,SA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","file":"static/js/main.8d57a10a.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Navbar,Nav,Form} from 'react-bootstrap'\r\n\r\nexport default function Header(props){\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\" className=\"nav-header\">\r\n                <Navbar.Brand href=\"#home\" style={{\"fontFamily\":\"sans-serif\"}}>{props.name}</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/\" className='tabs-section'>Home</Nav.Link>\r\n                <Nav.Link href=\"/continents\" className='tabs-section'>Continents</Nav.Link>\r\n                <Nav.Link href=\"/countries\" className='tabs-section'>Countries</Nav.Link>\r\n                <Nav.Link href=\"/news\" className='tabs-section'>News</Nav.Link>\r\n                <Nav.Link href=\"/county\" className='tabs-section'>Local County Info</Nav.Link>\r\n                <Nav.Link href=\"/usstates\" className='tabs-section'>US States</Nav.Link>\r\n                <Nav.Link href=\"/testing-sites\" className='tabs-section'>Testing Sites</Nav.Link>\r\n                </Nav>\r\n                <Form inline>\r\n                {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                <Button variant=\"outline-info\">Search</Button> */}\r\n                <Nav.Link href=\"/about\" className='tabs-section'>About</Nav.Link>\r\n                </Form>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Card} from 'react-bootstrap'\r\n\r\nexport default function TotalCard(props){\r\n    return (<div>\r\n            <Card className=\"card-pos-death\" style={{  }}>\r\n                <Card.Body>\r\n                    <Card.Title><h2>{props.title}</h2></Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 card-subtitle\">+Today: {props.posVal}</Card.Subtitle>\r\n                    <Card.Text className=\"covid-counts\">\r\n                    Cases: {props.content}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n    </div>)\r\n}\r\n\r\nfunction ImageCard(props){\r\n    return(<div>\r\n        <Card style={{ width: '18rem' }}>\r\n            <Card.Img variant=\"top\" src={props.image} />\r\n            <Card.Body>\r\n                <Card.Title>{props.name}</Card.Title>\r\n                <Card.Text>\r\n                {props.continent}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    </div>)\r\n}\r\n\r\nfunction DiffCard(props){\r\n    return (\r\n        <div>\r\n            <Card className=\"card-pos-death\" style={{  }}>\r\n                <Card.Body>\r\n                    <Card.Title><h2>{props.title}</h2></Card.Title>\r\n                    {/* <Card.Subtitle className=\"mb-2 text-muted\">{props.posVal}</Card.Subtitle> */}\r\n                    <Card.Text className=\"covid-counts\">\r\n                    {props.name1} {props.cont1}\r\n                    </Card.Text>\r\n                    <Card.Text className=\"covid-counts\">\r\n                    {props.name2} {props.cont2}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TestingSiteCard(props){\r\n    return(\r\n        <div>\r\n            <Card className=\"card-pos-death\" style={{  }}>\r\n                <Card.Body>\r\n                    <Card.Title><h2>{props.title}</h2></Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 card-subtitle\">Address: {props.posVal}</Card.Subtitle>\r\n                    <Card.Text className=\"covid-counts\">\r\n                    Cases: {props.content}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NewsCard(props){\r\n    let sign=\">>\"\r\n    return(\r\n        <div>\r\n            <Card className=\"card-News\">\r\n                <Card.Body>\r\n                    <Card.Title><h4>{props.obj.title}</h4></Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 card-subtitle\" style={{'color':'green'}}>{props.obj.description}</Card.Subtitle>\r\n                    <Card.Subtitle className=\"mb-2 card-subtitle\" style={{'color':'blue'}}>Author: {props.obj.author}</Card.Subtitle>\r\n                    <Card.Text className=\"covid-counts\">\r\n                    {<a href={props.obj.url}>Read More {sign}</a>}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport {ImageCard,DiffCard, TestingSiteCard, NewsCard}","import React from 'react'\r\nimport {Card} from 'react-bootstrap'\r\n\r\nexport default function TabHeader(props){\r\n    return (\r\n        <div>\r\n            <Card className=\"card-tab-header\">\r\n                <Card.Body>\r\n                    <Card.Title><h2>{props.title}</h2></Card.Title>\r\n                    {/* <Card.Link href=\"#\">Card Link</Card.Link>\r\n                    <Card.Link href=\"#\">Another Link</Card.Link> */}\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}","var Dict = require(\"collections/dict\");\r\nconst stateDict=new Dict(\r\n    {\r\n    'Florida':'FL',\r\n    'Texas':'TX',\r\n    'New Jersey':'NJ',\r\n    'California':'CA',\r\n    'New York':'NY',\r\n    'Alabama':'AL',\r\n    'Alaska':'AK',\r\n    'Arkansas':'AR',\r\n    'Arizona':'AZ',\r\n    'Colorado':'CO',\r\n    'Connecticut':'CT',\r\n    'Delaware':'DE',\r\n    'District of Columbia':'DC',\r\n    'Georgia':'GA',\r\n    'Hawaii':'HI',\r\n    'Idaho':'ID',\r\n    'Illinois':'IL',\r\n    'Indiana':'IN',\r\n    'Iowa':'IA',\r\n    'Kansas':'KS',\r\n    'Kentucky':'KY',\r\n    'Louisiana':'LA',\r\n    'Maine':'ME',\r\n    'Maryland':'MD',\r\n    'Massachusetts':'MA',\r\n    'Michigan':'MI',\r\n    'Minnesota':'MN',\r\n    'Mississippi':'MS',\r\n    'Missouri':'MO',\r\n    'Montana':'MT',\r\n    'Nebraska':'NE',\r\n    'Nevada':'NV',\r\n    'New Hampshire':'NH',\r\n    'New Mexico':'NM',\r\n    'North Carolina':'NC',\r\n    'North Dakota':'ND',\r\n    'Ohio':'OH',\r\n    'Oklahoma':'OK',\r\n    'Oregon':'OR',\r\n    'Pennsylvania':'PA',\r\n    'Rhode Island':'RI',\r\n    'South Carolina':'SC',\r\n    'South Dakota':'SD',\r\n    'Tennessee':'TN',\r\n    'Utah':'UT',\r\n    'Vermont':'VT',\r\n    'Virginia':'VA',\r\n    'Washington':'WA',\r\n    'West Virginia':'WV',\r\n    'Wisconsin':'WI',\r\n    'Wyoming':'WY'\r\n\r\n    })\r\n\r\n    const continentDict= new Dict({\r\n        'North America':'NA',\r\n        'Asia':'AS',\r\n        'South America':'SA',\r\n        'Australia/Oceania':'AU',\r\n        'Europe':'EU',\r\n        'Africa':'AF'\r\n    })\r\n\r\n    export default stateDict\r\n\r\n    export {continentDict}","import React,{useState,useEffect} from 'react';\r\nimport ReactFC from 'react-fusioncharts';\r\nimport FusionCharts from 'fusioncharts';\r\nimport FusionMaps from 'fusioncharts/maps/es/fusioncharts.world';\r\nimport World from 'fusioncharts/fusioncharts.maps'\r\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\r\nimport {continentDict} from './dictData'\r\nimport axios from 'axios'\r\n\r\n// Adding the chart and theme as dependency to the core fusioncharts\r\nReactFC.fcRoot(FusionCharts, FusionMaps, World, FusionTheme);\r\n\r\n//STEP 2 - Define the dataset and the colorRange of the map\r\n\r\nlet dataset1= []\r\n\r\nconst colorrange = {\r\n    \"minvalue\": \"0\",\r\n    \"code\": \"#FFE0B2\",\r\n    \"gradient\": \"1\",\r\n    \"color\": [{\r\n        \"minvalue\": \"10000.0\",\r\n        \"maxvalue\": \"50000.0\",\r\n        \"color\": \"#96d674\"\r\n    },\r\n    {\r\n        \"minvalue\": \"50000.0\",\r\n        \"maxvalue\": \"150000.0\",\r\n        \"color\": \"#0f4a0f\"\r\n    },\r\n    {\r\n        \"minvalue\": \"150000.0\",\r\n        \"maxvalue\": \"500000.0\",\r\n        \"color\": \"#0f4a2d\"\r\n    },\r\n     {\r\n        \"minvalue\": \"500000.0\",\r\n        \"maxvalue\": \"1000000.0\",\r\n        \"color\": \"#097572\"\r\n    },\r\n    {\r\n        \"minvalue\": \"1000000.0\",\r\n        \"maxvalue\": \"5000000.0\",\r\n        \"color\": \"#090c4a\"\r\n    },\r\n    {\r\n        \"minvalue\": \"5000000.0\",\r\n        \"maxvalue\": \"10000000.0\",\r\n        \"color\": \"#af74e3\"\r\n    },\r\n     {\r\n        \"minvalue\": \"10000000.0\",\r\n        \"maxvalue\": \"12500000.0\",\r\n        \"color\": \"#e37474\"\r\n    },\r\n    {\r\n        \"minvalue\": \"12500000.0\",\r\n        \"maxvalue\": \"15000000.0\",\r\n        \"color\": \"#c22d0c\"\r\n    },\r\n    {\r\n        \"minvalue\": \"15000000.0\",\r\n        \"maxvalue\": \"20000000.0\",\r\n        \"color\": \"#9e1f03\"\r\n    }]\r\n};\r\n\r\n// STEP 3 - Creating the JSON object to store the chart configurations\r\nconst chartConfigs = {\r\n    type: 'world', // The chart type\r\n    width: '700', // Width of the chart\r\n    height: '400', // Height of the chart\r\n    dataFormat: 'json', // Data type\r\n    dataSource: {\r\n        // Map Configuration\r\n        \"chart\": {\r\n            \"caption\": \"Continents Total covid-19 Cases\",\r\n            \"subcaption\": \"Asia(AS)North America(NA)South America(SA)Australia(AU)Europe(EU)Africa(AF)\",\r\n            \"numbersuffix\": \"\",\r\n            \"includevalueinlabels\": \"0\",\r\n            \"labelsepchar\": \": \",\r\n            \"entityFillHoverColor\": \"#FFF9C4\",\r\n            \"theme\": \"fusion\"\r\n        },\r\n        // Aesthetics; ranges synced with the slider\r\n        \"colorrange\": colorrange,\r\n        // Source data as JSON --> id represents countries of the world.\r\n        \"data\": dataset1\r\n    }\r\n}\r\n\r\n\r\n// STEP 3 - Creating the DOM element to pass the react-fusioncharts component\r\n\r\nexport default function CovidWorldMap(){\r\n    const [continentData, setContinentData]=useState({})\r\n    const fetchData=()=>{\r\n        axios.get('https://disease.sh/v3/covid-19/continents?yesterday=true')\r\n        .then((res)=>{\r\n            setContinentData(res.data)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchData()\r\n    },[])\r\n\r\n    if ((Object.keys(continentData).length !== 0) && (dataset1.length === 0)){\r\n        continentData.map((item)=>{\r\n            console.log(item.continent)\r\n            dataset1.push({\r\n                \"ID\":continentDict.get(item.continent),\r\n                'value':item.cases,\r\n                'showLabel':'1'\r\n            })\r\n        })\r\n    } \r\n\r\n    if (dataset1.length === 0){\r\n        chartConfigs.dataSource.data=dataset1\r\n    }\r\n    return ( <\r\n        ReactFC {\r\n            ...chartConfigs\r\n        }\r\n        />\r\n    );\r\n} ","import React,{useState,useEffect} from 'react'\r\nimport ReactFC from 'react-fusioncharts';\r\nimport FusionCharts from 'fusioncharts';\r\nimport FusionMaps from 'fusioncharts/maps/es/fusioncharts.usa';\r\nimport USA from 'fusioncharts/fusioncharts.maps'\r\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\r\nimport axios from 'axios'\r\nimport stateDict from './dictData'\r\n\r\n\r\nReactFC.fcRoot(FusionCharts, FusionMaps, USA, FusionTheme);\r\n\r\nlet dataset1=[]\r\n\r\n const colorrange = {\r\n    \"minvalue\": \"0\",\r\n    \"code\": \"#FFE0B2\",\r\n    \"gradient\": \"1\",\r\n    \"color\": [{\r\n        \"minvalue\": \"50000.0\",\r\n        \"maxvalue\": \"100000.0\",\r\n        \"color\": \"#FFD74D\"\r\n    }, {\r\n        \"minvalue\": \"100000.0\",\r\n        \"maxvalue\": \"500000.0\",\r\n        \"color\": \"#FB8C00\"\r\n    }, {\r\n        \"minvalue\": \"500000.0\",\r\n        \"maxvalue\": \"1000000.0\",\r\n        \"color\": \"#E65100\"\r\n    },{\r\n        \"minvalue\":'1000000.0',\r\n        'maxvalue':'1500000.0',\r\n        'color':'#fb0000'\r\n    }]\r\n};\r\n\r\n\r\nconst chartConfigs = {\r\n    type: 'USA', // The chart type\r\n    width: '700', // Width of the chart\r\n    height: '400', // Height of the chart\r\n    dataFormat: 'json', // Data type\r\n    dataSource: {\r\n        // Map Configuration\r\n        \"chart\": {\r\n            \"caption\": \"StateWise Covid Cases\",\r\n            \"subcaption\": \" 1955-2015\",\r\n            \"numbersuffix\": \"\",\r\n            \"includevalueinlabels\": \"0\",\r\n            \"labelsepchar\": \": \",\r\n            \"entityFillHoverColor\": \"#FFF9C4\",\r\n            \"theme\": \"fusion\"\r\n        },\r\n        // Aesthetics; ranges synced with the slider\r\n        \"colorrange\": colorrange,\r\n        // Source data as JSON --> id represents countries of the world.\r\n        \"data\": dataset1\r\n    }\r\n}\r\n\r\nexport default function CovidUSMap(){\r\n    const [stateCases,setStateCase]=useState({})\r\n    const fetchDataFromAPI=()=>{\r\n        axios.get('https://disease.sh/v3/covid-19/states')\r\n        .then((res)=>{\r\n            setStateCase(res.data)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        fetchDataFromAPI()\r\n    },[])\r\n    if ((Object.keys(stateCases).length !== 0) && (dataset1.length) === 0){\r\n        stateCases.map((item)=>{\r\n           dataset1.push({\r\n               \"Label\":item.state,\r\n               'ID':stateDict.get(item.state),\r\n               \"value\":item.cases,\r\n               \"showLabel\":'1'\r\n           })\r\n        })\r\n    }\r\n    if (dataset1.length === 0){\r\n        chartConfigs.dataSource.data=dataset1\r\n    }\r\n    return (\r\n            <ReactFC {...chartConfigs}/>\r\n    )\r\n}\r\n","import React,{useState, useEffect} from 'react'\r\nimport TotalCard from './totalCard'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport TabHeader from './tabHeader'\r\nimport axios from 'axios'\r\nimport CovidWorldMap from './MapsComponents/worldsMap'\r\nimport {DiffCard} from './totalCard'\r\nimport CovidUSMap from './MapsComponents/usCovidMap'\r\n\r\nfunction Dashboard(){\r\n    let globalCases, deathCases,unitedStatesCases,usDeathCases,globalRecoveryCases,usRecoveryCases\r\n    let casesStatus, perMillionCases,testCounts\r\n    const [countryData,setCountryData]=useState({\r\n        totalCases:{},\r\n        usCases:{},\r\n    })\r\n     \r\n    const fetchData=()=>{\r\n        const totalCase=axios.get('https://disease.sh/v3/covid-19/all?yesterday=true')\r\n        // https://disease.sh/v3/covid-19/continents?yesterday=true\r\n        const usCases=axios.get('https://disease.sh/v3/covid-19/countries/United%20States?yesterday=true&strict=true')\r\n        // const stateCases=axios.get('https://disease.sh/v3/covid-19/states')\r\n        axios.all([totalCase,usCases])\r\n        .then(axios.spread((...res)=>{\r\n           setCountryData({totalCases:res[0].data,usCases:res[1].data})\r\n        }))\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n      }\r\n    \r\n    useEffect(()=>{ \r\n        fetchData()\r\n    },[])\r\n\r\n    if (Object.keys(countryData.totalCases).length !== 0){\r\n        console.log(countryData.totalCases)\r\n        globalCases= <TotalCard title=\"Positive Cases\" content={countryData.totalCases.cases} posVal={countryData.totalCases.todayCases}/>\r\n        deathCases= <TotalCard title=\"Death Cases\" content={countryData.totalCases.deaths} posVal={countryData.totalCases.todayDeaths}/>\r\n        globalRecoveryCases=<TotalCard title=\"Recovery Cases\" content={countryData.totalCases.recovered} posVal={countryData.totalCases.todayRecovered}/>\r\n        casesStatus=<DiffCard title=\"Cases Status\" name1=\"Active:\" cont1={countryData.totalCases.active} name2=\"Critical:\" cont2={countryData.totalCases.critical}/>\r\n        perMillionCases= <DiffCard title=\"Per Million Cases Counts\" name2=\"Cases/Million:\" name1=\"Deaths/Million:\" cont1={countryData.totalCases.deathsPerOneMillion}  cont2={countryData.totalCases.casesPerOneMillion}/>\r\n        testCounts=<DiffCard title=\"Test Counts\" name2=\"Test/Million:\" name1=\"Tests:\" cont1={countryData.totalCases.tests} cont2={countryData.totalCases.testsPerOneMillion}/>\r\n    }\r\n    if (Object.keys(countryData.usCases).length !== 0){\r\n        unitedStatesCases= <TotalCard title=\"Positive Cases\" content={countryData.usCases.cases} posVal={countryData.usCases.todayCases}/>\r\n        usDeathCases=<TotalCard title=\"Death Cases\" content={countryData.usCases.deaths} posVal={countryData.usCases.todayDeaths}/>\r\n        usRecoveryCases=<TotalCard title=\"Recovery Cases\" content={countryData.usCases.recovered} posVal={countryData.usCases.todayRecovered}/>\r\n    }\r\n    return (\r\n        <div>\r\n        {console.log(\"Hello there! wtf\")}\r\n        <Container fluid>\r\n            <div>\r\n                <center><TabHeader title=\"Global Covid-19 Data\"/></center>\r\n            </div>\r\n            <br/>\r\n            \r\n            <Row>\r\n                <Col xs=\"12\" md=\"4\"> {globalCases} </Col>\r\n                <Col xs=\"12\" md=\"4\"> {deathCases}</Col>\r\n                <Col xs=\"12\" md=\"4\"> {globalRecoveryCases}</Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col xs=\"12\" md=\"4\"> {casesStatus} </Col>\r\n                <Col xs=\"12\" md=\"4\"> {perMillionCases}</Col>\r\n                <Col xs=\"12\" md=\"4\"> {testCounts}</Col>\r\n            </Row>\r\n            <br/>\r\n            <div>\r\n                <center><TabHeader title=\"United States Covid-19 Data\"/></center>\r\n            </div>\r\n            <br/>\r\n            <Row>\r\n                <Col xs=\"12\" md=\"4\"> {unitedStatesCases} </Col>\r\n                <Col xs=\"12\" md=\"4\"> {usDeathCases}</Col>\r\n                <Col xs=\"12\" md=\"4\">{usRecoveryCases} </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col md=\"6\" lg=\"6\" xs=\"12\">\r\n                    <CovidWorldMap/>\r\n                </Col>\r\n                <Col md=\"6\" lg=\"6\" xs=\"12\">\r\n                    <CovidUSMap/>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n      </Container>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Dashboard","import React,{useState,useEffect} from 'react'\r\nimport {NewsCard} from '../totalCard'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport TabHeader from '../tabHeader'\r\n\r\nexport default function News(){\r\n    let vaccineNews=<a href=\"/vaccine-news\" style={{'textDecoration':'None'}}>Vaccine</a>\r\n    const [newsData, setNewsData]=useState([])\r\n    const fetchData=(e)=>{\r\n        axios.get('https://newsapi.org/v2/everything?q=COVID+vaccine+today&sortBy=publishedAt&apiKey=c70b84aa4fde411f808f50858fff1da2&pageSize=100&page=1')\r\n        .then((res)=>{\r\n            setNewsData(res.data.articles)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        fetchData()\r\n    },[])\r\n    \r\n    return (\r\n        <div>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs='12' md='6' lg='6'><center><TabHeader title=\"Covid-19 News\"/></center></Col>\r\n                    <Col xs='12' md='6' lg='6'><center><TabHeader title={vaccineNews}/></center></Col>\r\n                </Row>\r\n                \r\n                <br/>\r\n                <Row>\r\n                {newsData.map(function(item,i){\r\n                    return (\r\n                    <Col key={i} xs=\"12\" md='12'><NewsCard obj={item}/>\r\n                    <br/>\r\n                    </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport TabHeader from '../tabHeader'\r\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport TotalCard from '../totalCard'\r\nimport {DiffCard} from '../totalCard'\r\nimport {Card} from 'react-bootstrap'\r\n\r\n\r\nfunction NameCard(props){\r\n    return (\r\n        <div>\r\n            <Card className=\"continent-title\">\r\n                <Card.Body>\r\n                    <Card.Title><h2>{props.title}</h2></Card.Title>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function Continents(){\r\n    \r\n    let covidPositiveCases, covidDeathCases,covidRecoveryCases,casesStatus, perMillionCard,testCard\r\n    const [formvalue,setValue]=useState('')\r\n    const [continentData,setContinentData]=useState({})\r\n    const [display, setDisplay]=useState(false)\r\n    const [displayAutoSuggest,setDisplayAutoSuggest]=useState(false)\r\n    let cont=['Africa', 'Asia','Australia/Oceania', 'Europe', 'North America','South America']\r\n    const handleSubmit=(e)=>{\r\n        let url=`https://disease.sh/v3/covid-19/continents/${formvalue}?yesterday=true&strict=true`\r\n        if (formvalue===\"Australia/Oceania\"){\r\n            url='https://disease.sh/v3/covid-19/continents/Australia%2FOceania?yesterday=true&strict=true'\r\n        }\r\n        axios.get(url)\r\n        .then((res)=>{\r\n            setContinentData(res.data)\r\n            setDisplay(false)\r\n        })\r\n        .catch((err)=>{\r\n            setDisplay(true)\r\n            setContinentData({})\r\n        })\r\n        \r\n        e.preventDefault();\r\n    }\r\n    const handleChange=(e)=>{\r\n        setValue(e.target.value)\r\n    }\r\n    const setName=(name)=>{\r\n        setDisplayAutoSuggest(false)\r\n        setValue(name)\r\n    }\r\n    const fetchData=(e)=>{\r\n        axios.get('https://disease.sh/v3/covid-19/continents/North%20America?yesterday=true&strict=true')\r\n        .then((res)=>{\r\n            setContinentData(res.data)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        fetchData()\r\n    },[])\r\n    if (Object.keys(continentData).length !== 0){\r\n        covidPositiveCases= <TotalCard title=\"Positive Cases\" content={continentData.cases} posVal={continentData.todayCases}/>\r\n        covidDeathCases=<TotalCard title=\"Death Cases\" content={continentData.deaths} posVal={continentData.todayDeaths}/>\r\n        covidRecoveryCases=<TotalCard title=\"Recovery Cases\" content={continentData.recovered} posVal={continentData.todayRecovered}/>\r\n        casesStatus=<DiffCard title=\"Cases Status\" name1=\"Active:\" cont1={continentData.active} name2=\"Critical:\" cont2={continentData.critical}/>\r\n        perMillionCard= <DiffCard title=\"Per Million Cases Counts\" name2=\"Cases/Million:\" name1=\"Deaths/Million:\" cont1={continentData.deathsPerOneMillion} cont2= {continentData.casesPerOneMillion}/>\r\n        testCard=<DiffCard title=\"Test Counts\" name2=\"Test/Million:\" name1=\"Tests:\" cont1={continentData.tests} cont2={continentData.testsPerOneMillion}/>\r\n    }\r\n    return(\r\n        <div>\r\n            <Container fluid>\r\n            <center><TabHeader title=\"Continent Data\"/></center>\r\n                       \r\n            <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <br/>\r\n                    <center>\r\n                        <Form.Control className=\"country-field\" \r\n                        onChange={handleChange} \r\n                        onClick={()=>{\r\n                            setDisplayAutoSuggest(true)\r\n                        }}\r\n                        value={formvalue}\r\n                        type=\"text\" \r\n                        placeholder=\"Enter Continent Name\" />\r\n                        {display && (<div style={{'color':'red'}}>Please provide a valid continent name.</div>)}\r\n                        \r\n                    </center>\r\n                </Form.Group>\r\n                <center>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </center>\r\n            </Form>\r\n            <center>\r\n                <Row>\r\n                    <Col>\r\n                    {displayAutoSuggest && <div  className=\"autoContainer\">\r\n                            {cont.filter(name=>name.toLowerCase().indexOf(formvalue.toLowerCase())>-1).map((ele,i)=>{\r\n                                return (\r\n                                    <div \r\n                                    onClick={()=>setName(ele)}\r\n                                    className='option'\r\n                                    key={i}\r\n                                    tabIndex=\"0\"\r\n                                    >\r\n                                    {ele}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>}\r\n                    </Col>\r\n                </Row>\r\n            </center>\r\n            <br/>\r\n            <center><NameCard title={continentData.continent}/></center>\r\n            <br/>\r\n            <Row>\r\n                <Col xs=\"12\" md='4'>{covidPositiveCases}</Col>\r\n                <Col xs=\"12\" md='4'>{covidDeathCases}</Col>\r\n                <Col xs=\"12\" md='4'>{covidRecoveryCases}</Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col xs=\"12\" md='4'>{casesStatus}</Col>\r\n                <Col xs=\"12\" md='4'>{perMillionCard}</Col>\r\n                <Col xs=\"12\" md='4'>{testCard}</Col>\r\n            </Row>\r\n            <br/>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","\r\nlet countries=[\r\n    \"Afghanistan\",\r\n    \"Albania\",\r\n    \"Algeria\",\r\n    \"Andorra\",\r\n    \"Angola\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Austrian Empire\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas\",\r\n    \"Bahrain\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Bavaria\",\r\n    \"Belarus\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Benin\",\r\n    \"Bolivia\",\r\n    \"Bosnia and Herzegovina\",\r\n    \"Botswana\",\r\n    \"Brazil\",\r\n    \"Brunei\",\r\n    \"Brunswick and Lüneburg\",\r\n    \"Bulgaria\",\r\n    \"Burma\",\r\n    \"Burundi\",\r\n    \"Cabo Verde\",\r\n\"Cambodia\",\r\n\"Cameroon\",\r\n\"Canada\",\r\n\"Cayman Islands\",\r\n\"Central African Republic\",\r\n\"Central American Federation\",\r\n\"Chad\",\r\n\"Chile\",\r\n\"China\",\r\n\"Colombia\",\r\n\"Comoros\",\r\n\"Congo Free State, The\",\r\n\"Costa Rica\",\r\n\"Cote d’Ivoire (Ivory Coast)\",\r\n\"Croatia\",\r\n\"Cuba\",\r\n\"Cyprus\",\r\n\"Czechia\",\r\n\"Czechoslovakia\",\r\n\"Congo\",\r\n\"Denmark\",\r\n\"Djibouti\",\r\n\"Dominica\",\r\n\"Dominican Republic\",\r\n\"Duchy of Parma\",\r\n\"Ecuador\",\r\n\"Egypt\",\r\n\"El Salvador\",\r\n\"Eritrea\",\r\n\"Estonia\",\r\n\"Eswatini\",\r\n\"Ethiopia\",\r\n\"Fiji\",\r\n\"Finland\",\r\n\"France\",\r\n\"Gabon\",\r\n\"Gambia\",\r\n\"Georgia\",\r\n\"Germany\",\r\n\"Ghana\",\r\n\"Grand Duchy of Tuscany\",\r\n\"Greece\",\r\n\"Grenada\",\r\n\"Guatemala\",\r\n\"Guinea\",\r\n\"Guinea-Bissau\",\r\n\"Guyana\",\r\n\"Haiti\",\r\n\"Hanover\",\r\n\"Hanseatic Republics\",\r\n\"Hesse\",\r\n\"Honduras\",\r\n\"Hungary\",\r\n\"Iceland\",\r\n\"India\",\r\n\"Indonesia\",\r\n\"Iran\",\r\n\"Iraq\",\r\n\"Ireland\",\r\n\"Israel\",\r\n\"Italy\",\r\n\"Jamaica\",\r\n\"Japan\",\r\n\"Jordan\",\r\n\"Kazakhstan\",\r\n\"Kenya\",\r\n\"Serbia\",\r\n\"Kiribati\",\r\n\"Korea\",\r\n\"Kosovo\",\r\n\"Kuwait\",\r\n\"Kyrgyzstan\",\r\n\"Laos\",\r\n\"Latvia\",\r\n\"Lebanon\",\r\n\"Lesotho\",\r\n\"Lew Chew (Loochoo)\",\r\n\"Liberia\",\r\n\"Libya\",\r\n\"Liechtenstein\",\r\n\"Lithuania\",\r\n\"Luxembourg\",\r\n\"Madagascar\",\r\n\"Malawi\",\r\n\"Malaysia\",\r\n\"Maldives\",\r\n\"Mali\",\r\n\"Malta\",\r\n\"Marshall Islands\",\r\n\"Mauritania\",\r\n\"Mauritius\",\r\n\"Mecklenburg-Schwerin\",\r\n\"Mecklenburg-Strelitz\",\r\n\"Mexico\",\r\n\"Micronesia\",\r\n\"Moldova\",\r\n\"Monaco\",\r\n\"Mongolia\",\r\n\"Montenegro\",\r\n\"Morocco\",\r\n\"Mozambique\",\r\n\"Namibia\",\r\n\"Nassau\",\r\n\"Nauru\",\r\n\"Nepal\",\r\n\"Netherlands\",\r\n\"New Zealand\",\r\n\"Nicaragua\",\r\n\"Niger\",\r\n\"Nigeria\",\r\n\"North German Confederation\",\r\n\"North German Union\",\r\n\"North Macedonia\",\r\n\"Norway\",\r\n\"Oldenburg\",\r\n\"Oman\",\r\n\"Orange Free State\",\r\n\"Pakistan\",\r\n\"Palau\",\r\n\"Panama\",\r\n\"Papal States\",\r\n\"Papua New Guinea\",\r\n\"Paraguay\",\r\n\"Peru\",\r\n\"Philippines\",\r\n\"Piedmont-Sardinia\",\r\n\"Poland\",\r\n\"Portugal\",\r\n\"Qatar\",\r\n\"Republic of Genoa\",\r\n\"South Korea\",\r\n\"Republic of the Congo\",\r\n\"Romania\",\r\n\"Russia\",\r\n\"Rwanda\",\r\n\"Saint Kitts and Nevis\",\r\n\"Saint Lucia\",\r\n\"Saint Vincent and the Grenadines\",\r\n\"Samoa\",\r\n\"San Marino\",\r\n\"Sao Tome and Principe\",\r\n\"Saudi Arabia\",\r\n\"Schaumburg-Lippe\",\r\n\"Senegal\",\r\n\"Serbia\",\r\n\"Seychelles\",\r\n\"Sierra Leone\",\r\n\"Singapore\",\r\n\"Slovakia\",\r\n\"Slovenia\",\r\n\"Solomon Islands\",\r\n\"Somalia\",\r\n\"South Africa\",\r\n\"South Sudan\",\r\n\"Spain\",\r\n\"Sri Lanka\",\r\n\"Sudan\",\r\n\"Suriname\",\r\n\"Sweden\",\r\n\"Switzerland\",\r\n\"Syria\",\r\n\"Tajikistan\",\r\n\"Tanzania\",\r\n\"Texas\",\r\n\"Thailand\",\r\n\"Timor-Leste\",\r\n\"Togo\",\r\n\"Tonga\",\r\n\"Trinidad and Tobago\",\r\n\"Tunisia\",\r\n\"Turkey\",\r\n\"Turkmenistan\",\r\n\"Tuvalu\",\r\n\"Two Sicilies\",\r\n\"Uganda\",\r\n\"Ukraine\",\r\n\"Union of Soviet Socialist Republics\",\r\n\"United Arab Emirates\",\r\n\"United Kingdom\",\r\n\"United States of America\",\r\n\"Uruguay\",\r\n\"Uzbekistan\",\r\n\"Vanuatu\",\r\n\"Venezuela\",\r\n\"Vietnam\",\r\n\"Württemberg\",\r\n\"Yemen\",\r\n\"Zambia\",\r\n\"Zimbabwe\"\r\n]\r\n\r\nexport {countries}","import React,{useState, useEffect} from 'react'\r\nimport TabHeader from '../tabHeader'\r\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport {ImageCard,DiffCard} from '../totalCard'\r\nimport TotalCard from '../totalCard'\r\nimport {countries} from '../../views/home'\r\n\r\nexport default function Countries(){\r\n    let covidPositiveCases, covidDeathCases,covidRecoveryCases,casesStatus, perMillionCard,testCard\r\n    const [formvalue,setValue]=useState('')\r\n    const [apiCountryData,setCountryData]=useState({})\r\n    const [countryFlag,setCountryFlag]=useState('https://disease.sh/assets/img/flags/us.png')\r\n    const [display, setDisplay]=useState(false)\r\n    const [displayAutoSearch, setDisplayAutoSearch]=useState(false)\r\n\r\n    const handleChange=(e)=>{\r\n        setValue(e.target.value)\r\n    }\r\n    const fetchUSData=(e)=>{\r\n        axios.get('https://disease.sh/v3/covid-19/countries/United%20States?yesterday=true&strict=true')\r\n        .then((res)=>{\r\n            setCountryData(res.data)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        fetchUSData()\r\n    },[])\r\n    const handleSubmit=(e)=>{\r\n        axios.get(`https://disease.sh/v3/covid-19/countries/${formvalue}?yesterday=true&strict=true`)\r\n        .then((res)=>{\r\n            setCountryData(res.data)\r\n            setCountryFlag(res.data.countryInfo.flag)\r\n            setDisplay(false)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n            setDisplay(true)\r\n            setCountryData({})\r\n            setCountryFlag('')\r\n        })\r\n        console.log(apiCountryData)\r\n        e.preventDefault();\r\n        \r\n    }\r\n    if (Object.keys(apiCountryData).length !== 0){\r\n        covidPositiveCases= <TotalCard title=\"Positive Cases\" content={apiCountryData.cases} posVal={apiCountryData.todayCases}/>\r\n        covidDeathCases=<TotalCard title=\"Death Cases\" content={apiCountryData.deaths} posVal={apiCountryData.todayDeaths}/>\r\n        covidRecoveryCases=<TotalCard title=\"Recovery Cases\" content={apiCountryData.recovered} posVal={apiCountryData.todayRecovered}/>\r\n        casesStatus=<DiffCard title=\"Cases Status\" name1=\"Active:\" cont1={apiCountryData.active} name2=\"Critical:\" cont2={apiCountryData.critical}/>\r\n        perMillionCard= <DiffCard title=\"Per Million Cases Counts\" name2=\"Cases/Million:\" name1=\"Deaths/Million:\" cont1={apiCountryData.deathsPerOneMillion} cont2= {apiCountryData.casesPerOneMillion}/>\r\n        testCard=<DiffCard title=\"Test Counts\" name2=\"Test/Million:\" name1=\"Tests:\" cont1={apiCountryData.tests} cont2={apiCountryData.testsPerOneMillion}/>\r\n    }\r\n    const setName=(name)=>{\r\n        setValue(name)\r\n        setDisplayAutoSearch(false)\r\n    }\r\n    return (\r\n        <div>\r\n        <Container fluid>\r\n        <center><TabHeader title=\"Country Data\"/></center>\r\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <br/>\r\n                <center>\r\n                    <Form.Control className=\"country-field\" onClick={()=>setDisplayAutoSearch(true)}\r\n                     onChange={handleChange} type=\"text\"\r\n                      value={formvalue}\r\n                      placeholder=\"Enter Country Name\" />\r\n                    {display && (<div style={{'color':'red'}}>Please provide a valid country name.</div>)}\r\n                    \r\n                </center>\r\n            </Form.Group>\r\n            <center>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </center>\r\n        </Form>\r\n        <center>\r\n        <Row>\r\n            <Col>\r\n            {displayAutoSearch && <div  className=\"autoContainer\">\r\n                {countries.filter(name=>name.toLowerCase().indexOf(formvalue.toLowerCase())>-1).map((ele,i)=>{\r\n                    return (\r\n                        <div \r\n                        onClick={()=>setName(ele)}\r\n                        className='option'\r\n                        key={i}\r\n                        tabIndex=\"0\"\r\n                        >\r\n                        {ele}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>}\r\n            </Col>\r\n        </Row>\r\n        </center>\r\n        <br/>\r\n        <center>\r\n\r\n        <ImageCard name={apiCountryData.country} continent={apiCountryData.continent} image={countryFlag}/>\r\n        \r\n        </center>\r\n        <br/>\r\n        <Row>\r\n            <Col xs=\"12\" md='4'>{covidPositiveCases}</Col>\r\n            <Col xs=\"12\" md='4'>{covidDeathCases}</Col>\r\n            <Col xs=\"12\" md='4'>{covidRecoveryCases}</Col>\r\n        </Row>\r\n        <br/>\r\n        <Row>\r\n            <Col xs=\"12\" md='4'>{casesStatus}</Col>\r\n            <Col xs=\"12\" md='4'>{perMillionCard}</Col>\r\n            <Col xs=\"12\" md='4'>{testCard}</Col>\r\n        </Row>\r\n        <br/>\r\n        </Container>\r\n\r\n        </div>\r\n    )\r\n}","let stateName={\r\n    \"florida\":'FL',\r\n    'newjersey':'NJ',\r\n    'california':'CA',\r\n    'texas':'TX',\r\n    'newyork':'NY',\r\n    'connecticut':'CT',\r\n    'ohio':\"OH\",\r\n    'georgia':'GA',\r\n    'northcarolina':'NC',\r\n    'southcarolina':'SC',\r\n    'missouri':'MO',\r\n    'alabama':'AL',\r\n    'arizona':'AZ',\r\n    'alaska':'AK',\r\n    'arkansas':'AK',\r\n    'colorado':'CO',\r\n    'delaware':'DE',\r\n    'districtofcolumbia':'DC',\r\n    'hawaii':'HI',\r\n    'idaho':'ID',\r\n    'illinois':'IL',\r\n    'indiana':'IN',\r\n    'iowa':'IA',\r\n    'kansas':'KS',\r\n    'kentucky':'KY',\r\n    'louisiana':'LA',\r\n    'maine':'ME',\r\n    'maryland':'MD',\r\n    'massachusetts':'MA',\r\n    'michigan':'MI',\r\n    'minnesota':'MN',\r\n    'mississippi':'MS',\r\n    'montana':'MT',\r\n    'nebraska':'NE',\r\n    'nevada':'NV',\r\n    'newhampshire':'NH',\r\n    'newmexico':'NM',\r\n    'northdakota':'ND',\r\n    'oklahoma':'OK',\r\n    'oregon':'OR',\r\n    'pennsylvania':'PA',\r\n    'rhodeisland':'RI',\r\n    'southdakota':'SD',\r\n    'tennessee':'TN',\r\n    'utah':'UT',\r\n    'vermont':'VT',\r\n    'virginia':'VA',\r\n    'washington':'WA',\r\n    'westvirginia':'WV',\r\n    'wisconsin':'WI',\r\n    'wyoming':'WY'\r\n}\r\n\r\nlet USstates=[\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'connecticut',\r\n    'Colorado',\r\n    'Delaware',\r\n    'District of Columbia',\r\n    \"Florida\",\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Missouri',\r\n    'Mississippi',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Mexico',\r\n    'New Jersey',\r\n    'New York',\r\n    'North Carolina',\r\n    'North Dakota',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'Westvirginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n]\r\n\r\nexport {stateName,USstates}","import React from \"react\";\r\nimport SlideToggle from \"react-slide-toggle\";\r\nimport {Card} from 'react-bootstrap'\r\nimport {FaChevronDown} from 'react-icons/fa'\r\n\r\nconst CountyCard = (props) => (\r\n  <SlideToggle\r\n    collapsed\r\n    duration={800}\r\n    render={({ onToggle, setCollapsibleElement, progress }) => (\r\n      <div className=\"my-collapsible\">\r\n\r\n        <Card className=\"card-News\">\r\n                <Card.Body className=\"vaccine-Card\">\r\n                <center>\r\n                    <Card.Title><h4>{props.obj.county}</h4></Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 card-subtitle\" style={{'color':'red', 'fontWeight':'bolder'}}>{props.obj.state}</Card.Subtitle>\r\n                    <Card.Subtitle className=\"mb-2 card-subtitle\" style={{'color':'#bb2205', 'fontWeight':'bolder'}}>+ Cases Today: {props.obj.actuals.newCases}</Card.Subtitle>\r\n                    <Card.Text className=\"covid-counts\" style={{'color':'green', 'fontWeight':'bolder'}}>\r\n                      Cases: {props.obj.actuals.cases} \r\n                    </Card.Text>\r\n                    <Card.Text className=\"covid-counts\" style={{'color':'green', 'fontWeight':'bolder'}}>\r\n                      Deaths: {props.obj.actuals.deaths}\r\n                    </Card.Text>\r\n                    \r\n                </center>\r\n                </Card.Body>\r\n        </Card>\r\n\r\n        <button className=\"my-collapsible__toggle\" onClick={onToggle}><label style={{ fontSize:\"20px\", color:'blue',fontWeight:\"bolder\"}}>Details</label>\r\n        <FaChevronDown style={{ fontSize:\"25px\", color:'blue'}}/>\r\n        {/* <span className=\"number\">{progress.toFixed(1)}</span> */}\r\n        </button>\r\n        <div className=\"my-collapsible__content\" ref={setCollapsibleElement}>\r\n          <div\r\n            className=\"my-collapsible__content-inner\"\r\n            style={{\r\n              transform: `translateY(${Math.round(20 * (-1 + progress))}px)`\r\n            }}\r\n          >\r\n            <Card.Text className=\"state-covid-counts\" >\r\n              Test Positivity Ratio: {props.obj.metrics.testPositivityRatio}\r\n            </Card.Text>\r\n            <Card.Text className=\"state-covid-counts\" >\r\n              Case Density: {props.obj.metrics.caseDensity}\r\n            </Card.Text>\r\n            <Card.Text className=\"state-covid-counts\" >\r\n              Infection Rate: {props.obj.metrics.infectionRate}\r\n            </Card.Text>\r\n            <Card.Text className=\"state-covid-counts\" >\r\n              Hospital Beds Capacity: {props.obj.actuals.hospitalBeds.capacity}\r\n            </Card.Text>\r\n            <Card.Text className=\"state-covid-counts\" >\r\n              ICU Beds Capacity: {props.obj.actuals.icuBeds.capacity}\r\n            </Card.Text>\r\n            <Card.Text className=\"state-covid-counts\" >\r\n              Last Updated Date: {props.obj.lastUpdatedDate}\r\n            </Card.Text>\r\n              \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default CountyCard","import React,{useState,useEffect,useRef} from 'react'\r\nimport TabHeader from '../tabHeader'\r\nimport {Container, Row, Col,Form, Button} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport {stateName,USstates} from './stateName'\r\nimport CountyCard from './countyToggleCard'\r\n\r\nexport default function LocalInfo(){\r\n    const [formvalue,setValue]=useState('')\r\n    const [apiCountyData,setCountyData]=useState({})\r\n    const [countyData,setCountyInfo]=useState([])\r\n    const [display,setDisplay]=useState(false)\r\n    const [displayAutoSearch, setDisplayAutoSearch]=useState(false)\r\n    const wRef=useRef(null)\r\n\r\n    const handleChange=(e)=>{\r\n        setValue(e.target.value)\r\n    }\r\n    const fetchUSData=(e)=>{\r\n        axios.get('https://api.covidactnow.org/v2/counties.json?apiKey=c50a0970b11e4e5698159f28a81e52e3')\r\n        .then((res)=>{\r\n            setCountyData(res.data) \r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        fetchUSData()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        \r\n        document.addEventListener('mousedown', handleClickOutside)\r\n        \r\n        return ()=>{\r\n            console.log('removed')\r\n            document.removeEventListener('mousedown',handleClickOutside)\r\n        }\r\n    },[wRef])\r\n    const handleClickOutside = (event)=>{\r\n        console.log('mousedown',wRef.current.contains(event.target))\r\n        if(wRef.current && !wRef.current.contains(event.target)){\r\n            setDisplayAutoSearch(false)\r\n        }\r\n    }\r\n\r\n    const setName=(name)=>{\r\n        setValue(name)\r\n        setDisplayAutoSearch(false)\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        let countyInfo=[]\r\n        apiCountyData.map((item)=>{\r\n            let state=formvalue.replaceAll(' ','').toLowerCase()\r\n            if(state in stateName){\r\n                if (stateName[state]===item.state){\r\n                    countyInfo.push(item)\r\n                }\r\n            }\r\n        })\r\n        if (countyInfo.length===0){\r\n            setDisplay(true)\r\n        }\r\n        else{\r\n            setDisplay(false)\r\n        }\r\n        setCountyInfo(countyInfo)\r\n        e.preventDefault();\r\n        \r\n    }\r\n    return (\r\n        <div ref={wRef}>\r\n            <Container fluid>\r\n                <center><TabHeader title=\"County Covid-19 Data\"/></center>\r\n                <br/>\r\n                <Form onSubmit={handleSubmit} autoComplete='off'>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <br/>\r\n                    <center>\r\n                        <Form.Control className=\"country-field\"\r\n                         onChange={handleChange} \r\n                         onClick={()=>{\r\n                             setDisplayAutoSearch(true)\r\n                         }}\r\n                         value={formvalue}\r\n                         type=\"text\" placeholder=\"Enter State Name\" />\r\n                        {display && (<div style={{'color':'red'}}>Please provide a valid US state name.</div>)}\r\n                    </center>\r\n                </Form.Group>\r\n                <center>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </center> \r\n                </Form>\r\n                <center>\r\n                    <Row>\r\n                        <Col>\r\n                        {displayAutoSearch && <div className=\"autoContainer\">\r\n                            {USstates.filter(name=>name.toLowerCase().indexOf(formvalue.toLowerCase())>-1).map((ele,i)=>{\r\n                                return(\r\n                                    <div \r\n                                    className=\"option\"\r\n                                    onClick={()=>setName(ele)}\r\n                                    key={i}\r\n                                    tabIndex=\"0\"\r\n                                    >\r\n                                    {ele}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>}\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </center>\r\n                <br/>\r\n                <Row>\r\n                {countyData.map(function(item,i){\r\n                return (\r\n                <Col key={i} xs=\"12\" md='3'><CountyCard obj={item}/>\r\n                <br/>\r\n                </Col>\r\n                )\r\n            })}\r\n            </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport SlideToggle from \"react-slide-toggle\";\r\nimport {Card} from 'react-bootstrap'\r\nimport {FaChevronDown} from 'react-icons/fa'\r\n\r\nconst StateCard = (props) => (\r\n  <SlideToggle\r\n    collapsed\r\n    duration={800}\r\n    render={({ onToggle, setCollapsibleElement, progress }) => (\r\n      <div className=\"my-collapsible\">\r\n        <Card className=\"card-pos-death\">\r\n                <Card.Body className=\"state-Card\">\r\n                    <Card.Title><h2>{props.obj.state}</h2></Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 card-subtitle\">+Today: {props.obj.todayCases}</Card.Subtitle>\r\n                    <Card.Text className=\"covid-counts\">\r\n                    Cases: {props.obj.cases}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n        </Card>\r\n        <button className=\"my-collapsible__toggle\" onClick={onToggle}>\r\n        <FaChevronDown style={{ fontSize:\"25px\", color:'blue'}}/>\r\n        {/* <span className=\"number\">{progress.toFixed(1)}</span> */}\r\n        </button>\r\n        <div className=\"my-collapsible__content\" ref={setCollapsibleElement}>\r\n          <div\r\n            className=\"my-collapsible__content-inner\"\r\n            style={{\r\n              transform: `translateY(${Math.round(20 * (-1 + progress))}px)`\r\n            }}\r\n          >\r\n            \r\n             <p className=\"state-covid-counts\">Active: {props.obj.active}</p>\r\n             <p className=\"state-covid-counts\">Deaths: {props.obj.deaths}</p>\r\n             <p className=\"state-covid-counts\">Today Deaths: {props.obj.todayDeaths}</p>\r\n             <p className=\"state-covid-counts\">Cases/Million: {props.obj.casesPerOneMillion}</p>\r\n             <p className=\"state-covid-counts\">Deaths/Million: {props.obj.deathsPerOneMillion}</p>\r\n             <p className=\"state-covid-counts\">Recovered: {props.obj.recovered}</p>\r\n             <p className=\"state-covid-counts\">Tests: {props.obj.tests}</p>\r\n             <p className=\"state-covid-counts\">Tests/Million: {props.obj.testsPerOneMillion}</p> \r\n             <p className=\"state-covid-counts\">Population: {props.obj.population}</p> \r\n              \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default StateCard","import React, { useEffect, useState } from 'react'\r\nimport StateCard from './CardToggleState'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport TabHeader from '../tabHeader'\r\n\r\n\r\nexport default function USStates(){\r\n    const [stateData, setStateData]=useState([])\r\n    const fetchData=()=>{\r\n        axios.get('https://disease.sh/v3/covid-19/states?yesterday=true')\r\n        .then((res)=>{\r\n            setStateData(res.data)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        fetchData()\r\n    },[])\r\n    return (\r\n        <div>\r\n\r\n        <Container fluid>\r\n            <center><TabHeader title=\"United States State Data\"/></center>\r\n            <br/>\r\n            <Row>\r\n            {stateData.map(function(item,i){\r\n                return (\r\n                <Col key={i} xs=\"12\" md='3'><StateCard obj={item}/>\r\n                <br/>\r\n                </Col>\r\n                )\r\n            })}\r\n            </Row>\r\n            \r\n        </Container>                \r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport SlideToggle from \"react-slide-toggle\";\r\nimport {Card} from 'react-bootstrap'\r\nimport {FaChevronDown} from 'react-icons/fa'\r\n\r\nconst TestingSiteCard = (props) => (\r\n\r\n  <SlideToggle\r\n    collapsed\r\n    duration={800}\r\n    render={({ onToggle, setCollapsibleElement, progress }) => (\r\n      <div className=\"my-collapsible\">\r\n        <Card className=\"card-pos-death\">\r\n                <Card.Body className=\"state-Card\">\r\n                    <Card.Title><h3>{props.obj.name}</h3></Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 card-subtitle\" style={{'color':'red', 'fontWeight':'bolder'}}>{props.obj.physical_address[0].state_province}</Card.Subtitle>\r\n                    <Card.Text className=\"covid-counts-site\">\r\n                        Address: {props.obj.physical_address[0].address_1} \r\n                    </Card.Text>\r\n                    <Card.Text className=\"covid-counts-site\">\r\n                        City: {props.obj.physical_address[0].city}\r\n                    </Card.Text>\r\n                    <Card.Text className=\"covid-counts-site\">\r\n                        ZIP Code: {props.obj.physical_address[0].postal_code}\r\n                    </Card.Text>\r\n                    <Card.Text className=\"covid-counts-site\">\r\n                        Phone No: {props.phone}\r\n                    </Card.Text>\r\n                    <Card.Text className=\"covid-counts-site\">\r\n                        Days: Opens Everyday\r\n                    </Card.Text>\r\n                    <Card.Text className=\"covid-counts-site\">\r\n                        Opens At: {props.opens}\r\n                    </Card.Text>\r\n                    <Card.Text className=\"covid-counts-site\">\r\n                        Closes At: {props.closes}\r\n                    </Card.Text>\r\n                        \r\n                </Card.Body>\r\n        </Card>\r\n        <button className=\"my-collapsible__toggle\" onClick={onToggle}>\r\n        <FaChevronDown style={{ fontSize:\"25px\", color:'blue'}}/>\r\n        {/* <span className=\"number\">{progress.toFixed(1)}</span> */}\r\n        </button>\r\n        <div className=\"my-collapsible__content\" ref={setCollapsibleElement}>\r\n          <div\r\n            className=\"my-collapsible__content-inner\"\r\n            style={{\r\n              transform: `translateY(${Math.round(20 * (-1 + progress))}px)`\r\n            }}\r\n          >\r\n            \r\n             <p className=\"state-covid-counts\">Active: {props.obj.description}</p>\r\n              \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default TestingSiteCard","import React,{useState,useEffect,useRef} from 'react'\r\nimport TabHeader from '../tabHeader'\r\nimport {Container, Row, Col,Form, Button} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport TestingSiteCard from './testingSiteCardToggle'\r\nimport {USstates} from '../CountyComponents/stateName'\r\n\r\nexport default function TestingSites(){\r\n    const [stateName,setStateName]=useState('')\r\n    const [testingSiteData, setTestingSiteData]=useState([])\r\n    const [display, setDisplay]=useState(false)\r\n    const [displayAutoSearch, setDisplayAutoSearch]=useState(false)\r\n    const wRef=useRef(null)\r\n\r\n    const handleSubmit=(e)=>{\r\n       axios.post(`http://127.0.0.1:5000/testing`, { state:stateName.toLowerCase().replaceAll(' ','') })\r\n      .then(res => {\r\n        if (res.data.Item===undefined){\r\n            setDisplay(true)\r\n            setTestingSiteData({})\r\n        }\r\n        else{\r\n            setTestingSiteData(res.data.Item.data)\r\n            setDisplay(false)\r\n        }\r\n        \r\n      })\r\n      e.preventDefault()\r\n    }\r\n    useEffect(()=>{\r\n        \r\n        document.addEventListener('mousedown', handleClickOutside)\r\n        \r\n        return ()=>{\r\n            console.log('removed')\r\n            document.removeEventListener('mousedown',handleClickOutside)\r\n        }\r\n    },[wRef])\r\n    const handleClickOutside = (event)=>{\r\n        console.log('mousedown',wRef.current.contains(event.target))\r\n        if(wRef.current && !wRef.current.contains(event.target)){\r\n            setDisplayAutoSearch(false)\r\n        }\r\n    }\r\n\r\n    \r\n    const handleChange=(e)=>{\r\n        setStateName(e.target.value)\r\n    }\r\n    const setName=(name)=>{\r\n        setStateName(name)\r\n        setDisplayAutoSearch(false)\r\n    }\r\n    return (\r\n        <div ref={wRef}>\r\n            <Container fluid>\r\n                <center><TabHeader title='State Covid-19 Testing Sites'/></center>\r\n                <br/>\r\n                <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <br/>\r\n                    <center>\r\n                        <Form.Control className=\"country-field\" \r\n                        value={stateName} onClick={()=>setDisplayAutoSearch(true)} \r\n                        onChange={handleChange} \r\n                        type=\"text\" \r\n                        oncl\r\n                        placeholder=\"Enter State Name\" />\r\n                        {display && (<div style={{'color':'red'}}>Please Provide correct state name.</div>)}\r\n                        \r\n                    </center>\r\n                </Form.Group>\r\n                <center>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </center> \r\n                </Form>\r\n                <center>\r\n                    <Row>\r\n                        <Col>\r\n                        {displayAutoSearch && <div className=\"autoContainer\">\r\n                            {USstates.filter(name=>name.toLowerCase().indexOf(stateName.toLowerCase())>-1).map((ele,i)=>{\r\n                                return(\r\n                                    <div \r\n                                    className=\"option\"\r\n                                    onClick={()=>setName(ele)}\r\n                                    key={i}\r\n                                    tabIndex=\"0\"\r\n                                    >\r\n                                    {ele}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>}\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </center>\r\n                <br/>\r\n                <Row>\r\n                    {!display && testingSiteData.map(function(item,i){\r\n                        let opens_at=''\r\n                        let closes_at=''\r\n                        let phone_no=''\r\n                        if ((item.regular_schedule).length>0){\r\n\r\n                            opens_at=item.regular_schedule[0].opens_at\r\n                            closes_at=item.regular_schedule[0].closes_at\r\n                        }\r\n                        if ((item.phones.length)>0){\r\n                            phone_no=item.phones[0].number\r\n                        }\r\n                        if ((item.physical_address).length===0){\r\n                            item.physical_address=[\r\n                                {\r\n                                    state_province:'',\r\n                                    address_1:'',\r\n                                    postal_code:''\r\n                                }\r\n                            ]\r\n                        }\r\n                            \r\n\r\n                        return (\r\n                        <Col key={i} xs=\"12\" md='4'><TestingSiteCard \r\n                        obj={item} \r\n                        phone={phone_no} \r\n                        opens={opens_at} \r\n                        closes={closes_at}\r\n                        />\r\n                        <br/>\r\n                        </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport SlideToggle from \"react-slide-toggle\";\r\nimport {Card} from 'react-bootstrap'\r\nimport {FaChevronDown} from 'react-icons/fa'\r\n\r\nconst VaccineCard = (props) => (\r\n  <SlideToggle\r\n    collapsed\r\n    duration={800}\r\n    render={({ onToggle, setCollapsibleElement, progress }) => (\r\n      <div className=\"my-collapsible\">\r\n\r\n        <Card className=\"card-News\">\r\n                <Card.Body className=\"vaccine-Card\">\r\n                    <Card.Title><h4>{props.obj.candidate}</h4></Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 card-subtitle\" style={{'color':'green'}}>Mechanism: {props.obj.mechanism}</Card.Subtitle>\r\n                    <Card.Subtitle className=\"mb-2 card-subtitle\" style={{'color':'blue'}}>Sponsors: {props.obj.sponsors}</Card.Subtitle>\r\n                    <Card.Text className=\"covid-counts\">\r\n                    <label style={{fontWeight:'bolder'}}>Trail Phase: {props.obj.trialPhase}</label>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n        </Card>\r\n\r\n        <button className=\"my-collapsible__toggle\" onClick={onToggle}><label style={{ fontSize:\"20px\", color:'blue',fontWeight:\"bolder\"}}>Details</label>\r\n        <FaChevronDown style={{ fontSize:\"25px\", color:'blue'}}/>\r\n        {/* <span className=\"number\">{progress.toFixed(1)}</span> */}\r\n        </button>\r\n        <div className=\"my-collapsible__content\" ref={setCollapsibleElement}>\r\n          <div\r\n            className=\"my-collapsible__content-inner\"\r\n            style={{\r\n              transform: `translateY(${Math.round(20 * (-1 + progress))}px)`\r\n            }}\r\n          >\r\n             <p className=\"state-covid-counts\" >{props.obj.details}</p>\r\n              \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default VaccineCard","import React,{useState,useEffect} from 'react'\r\nimport VaccineCard from './vaccineToggleCard'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport TabHeader from '../tabHeader'\r\n\r\nexport default function Vaccine(){\r\n    let covidNews=<a href=\"/news\" style={{'textDecoration':'None'}}>Covid-19 News</a>\r\n    const [vaccineData, setVaccineData]=useState([])\r\n    const fetchData=(e)=>{\r\n        axios.get('https://disease.sh/v3/covid-19/vaccine')\r\n        .then((res)=>{\r\n            setVaccineData(res.data.data)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        fetchData()\r\n    },[])\r\n    \r\n    return (\r\n        <div>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs='12' md='6' lg='6'><center><TabHeader title={covidNews}/></center></Col>\r\n                    <Col xs='12' md='6' lg='6'><center><TabHeader title=\"Vaccine\"/></center></Col>\r\n                </Row>\r\n                \r\n                <br/>\r\n                <Row>\r\n                {vaccineData.map(function(item,i){\r\n                    return (\r\n                    <Col key={i} xs=\"12\" md='4'><VaccineCard obj={item}/>\r\n                    <br/>\r\n                    </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport {Card} from 'react-bootstrap'\r\n\r\n\r\nexport default function About(){\r\n    const style1={\r\n        fontFamily:'Montserrat, sans-serif', \r\n        fontWeight:\"bolder\"\r\n    }\r\n    return (\r\n        <div>\r\n        <Container fluid>\r\n            <Row>\r\n                <Col className='about-heading'>\r\n                    <center><h3 style={style1}>About this App</h3></center>\r\n                    <div  className=\"about-app\">\r\n                        This application is designed to track the covid-19 pandemic with the global as well as local data of United States.\r\n                        In addition to this feature, it also shows the current Covid-19 news with the status of different vaccines \r\n                        being developed across the globe. As for any United States resident, this application gives a clearer picture about\r\n                        the pandemic in different states, counties and the testing centers across the states. \r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col style={style1}><center><h3>Contributors</h3></center></Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col>\r\n                    <Card className=\"card-pos-death\" style={{  }}>\r\n                        <Card.Body>\r\n                            <Card.Title><h2>Mohammad Asif Khan</h2></Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 card-subtitle\">Miami,FL</Card.Subtitle>\r\n                            <Card.Text className=\"covid-counts\">\r\n                            Florida International University\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card className=\"card-pos-death\" style={{  }}>\r\n                        <Card.Body>\r\n                            <Card.Title><h2>Mario Jacas Alfonso</h2></Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 card-subtitle\">Miami,FL</Card.Subtitle>\r\n                            <Card.Text className=\"covid-counts\">\r\n                            Florida International University\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card className=\"card-pos-death\" style={{  }}>\r\n                        <Card.Body>\r\n                            <Card.Title><h2>Daniela Garcia</h2></Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 card-subtitle\">Miami,FL</Card.Subtitle>\r\n                            <Card.Text className=\"covid-counts\">\r\n                            Florida International University\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n        <br/><br/>\r\n        <footer>\r\n            <center>\r\n                <p style={style1}>&copy; covid-19app.com</p>\r\n            </center>\r\n        </footer>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\n// import {Button} from 'react-bootstrap'\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport Header from './views/header'\r\nimport Dashboard from './views/dashboard'\r\nimport News from './views/VaccineAndNews/news'\r\nimport Continents from './views/ContinentComponents/continents'\r\nimport Countries from './views/countryComponents/countries'\r\nimport LocalInfo from './views/CountyComponents/localInfo'\r\nimport USStates from './views/StateComponents/usStates'\r\nimport TestingSites from './views/Testing-Sites/Testing-sites'\r\nimport Vaccine from './views/VaccineAndNews/vaccine'\r\nimport About from './views/about'\r\nfunction App() {\r\n  \r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n          <header>\r\n          <Header name=\"Covid-19 App\"/>\r\n          </header>\r\n          <Switch>  \r\n            <Route path=\"/\" exact render={props=>\r\n            <div>\r\n              <Dashboard/>\r\n            </div>\r\n            }/>\r\n            <Route path=\"/news\" exact  component={News}/>\r\n            <Route path=\"/countries\" exact component={Countries}/>\r\n            <Route path=\"/continents\" exact component={Continents}/>\r\n            <Route path=\"/county\" exact component={LocalInfo}/>\r\n            <Route path=\"/usstates\" exact component={USStates}/>\r\n            <Route path=\"/testing-sites\" exact component={TestingSites}/>\r\n            <Route path=\"/vaccine-news\" exact component={Vaccine}/>\r\n            <Route path='/about' exact component={About}/>\r\n          </Switch>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './styles/demo.css'\r\nimport '../node_modules/font-awesome/css/font-awesome.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\n// import { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\n// import News from './views/news'\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <App/>\r\n  </div>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}